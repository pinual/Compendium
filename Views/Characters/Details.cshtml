@model Compendium.Models.Character

@{
    ViewData["Title"] = "Details";
}

<h1>Character Details</h1>

<hr />

<div>
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Type)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Edition)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Edition)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Ability)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Ability)
        </dd>
    </dl>
</div>

@if(ViewBag.Interactions != null)
{
    <div class = "col-sm-12"><h3>Known Interactions</h3></div>
    @foreach(Interaction interaction in @ViewBag.Interactions)
    {
        if (Model.Id == interaction.AffectedCharacter1)
        {
            var affected = ((Dictionary<Guid, string>)ViewData["CharacterGuidToName"])[interaction.AffectedCharacter2];
            <h4>@affected</h4>
        }
        else
        {
            var affected = ((Dictionary<Guid, string>)ViewData["CharacterGuidToName"])[interaction.AffectedCharacter1];
            <h4>@affected</h4>
        }
        <div class = "col-sm-10">@interaction.Explanation</div>
    }
}

<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    <a asp-action="Index">Back to List</a>
</div>
